census.income.reordered.withHeader.data <- read.csv("D:/Software/gitRepository/ml_workspace/project760/input/census-income-reordered-withHeader.data.csv")
View(census.income.reordered.withHeader.data)
census.data <- read.csv("D:/Software/gitRepository/ml_workspace/project760/input/census-income-reordered-withHeader.data.csv")
View(census.income.reordered.withHeader.data)
View(census.income.reordered.withHeader.data)
census.data %>% ggvis(~Label)
library(ggvis)
census.data %>% ggvis(~Label)
census.data %>% ggvis(~Label, ~age)
census.data %>% ggvis(~age, ~Label)
census.data %>% ggvis(~age, ~Label) %>% layer_points()
census.data %>% ggvis(~age, ~Label, ~weeks.worked.in.year) %>% layer_points()
census.data %>% ggvis(~Label, ~weeks.worked.in.year) %>% layer_points()
census.data %>% ggvis(~weeks.worked.in.year, aggregate(census.data, by=list(~weeks.worked.in.year), FUN=count, na.rm = TRUE)) %>% layer_points()
aggregate(census.data, by=list(~weeks.worked.in.year), FUN=count, na.rm = TRUE)
aggregate(census.data, by=list(~weeks.worked.in.year), FUN=sum, na.rm = TRUE)
aggregate(census.data, by=list(~weeks.worked.in.year, ~Label), FUN=sum, na.rm = TRUE)
head(census.data)
str(census.data)
summary(census.data)
summary(census.data[c("weeks.worked.in.year", "Label")])
summary(census.data[c("race", "Label")])
library(class)
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
census.data.norm = as.data.frame(lapply(census.data, normalize))
View(census.data)
View(census.data)
census.data.norm = as.data.frame(lapply(census.data[3:3], normalize))
View(census.data.norm)
View(census.data.norm)
train_data = census.data[3:]
train_data = census.data[3:42]
census.test <- read.csv("D:/Software/gitRepository/ml_workspace/project760/input/census-income-reordered-withHeader.test.csv")
View(census.test)
View(census.test)
test_data = census.data[3:42]
test_data = census.test[3:42]
train_labels = census.data[1]
test_labels = census.test[1]
census_pred = knn(train_data, test_data, train_labels, k=1)
train_labels
census_pred = knn(train_data, test_data, train_labels, k=1)
train_labels = as.factor(census.data[1])
train_labels = as.factor(census.data[[1])
train_labels = as.factor(census.data[[1]])
view train_labels
view(train_labels)
View(test_labels)
View(test_labels)
test_labels = as.factor(census.test[[1]])
census_pred = knn(train_data, test_data, train_labels, k=1)
